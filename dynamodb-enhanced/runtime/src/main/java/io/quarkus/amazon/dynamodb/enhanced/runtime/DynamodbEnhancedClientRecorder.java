package io.quarkus.amazon.dynamodb.enhanced.runtime;

import io.quarkus.arc.runtime.BeanContainer;
import io.quarkus.arc.runtime.BeanContainerListener;
import io.quarkus.runtime.annotations.Recorder;
import software.amazon.awssdk.enhanced.dynamodb.DynamoDbEnhancedClientExtension;
import software.amazon.awssdk.enhanced.dynamodb.extensions.AtomicCounterExtension;
import software.amazon.awssdk.enhanced.dynamodb.extensions.AutoGeneratedTimestampRecordExtension;
import software.amazon.awssdk.enhanced.dynamodb.extensions.VersionedRecordExtension;
import software.amazon.awssdk.enhanced.dynamodb.internal.extensions.ChainExtension;
import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;
import software.amazon.awssdk.services.dynamodb.DynamoDbClient;

import javax.inject.Inject;
import java.util.List;
import java.util.stream.Collectors;

@Recorder
public class DynamodbEnhancedClientRecorder {

    DynamoDbEnhancedBuildTimeConfig buildTimeConfig;

public DynamodbEnhancedClientRecorder(DynamoDbEnhancedBuildTimeConfig buildTimeConfig) {
    this.buildTimeConfig = buildTimeConfig;
}

    public BeanContainerListener setDynamoDbClient() {
        BeanContainerListener beanContainerListener = new BeanContainerListener() {

            @Override
            public void created(BeanContainer container) {
                DynamodbEnhancedClientProducer producer = container.beanInstance(DynamodbEnhancedClientProducer.class);
                producer.setDynamoDbClient(container.beanInstance(DynamoDbClient.class),
                        createExtensionList());
            }
        };

        return beanContainerListener;
    }

    public BeanContainerListener setDynamoDbAsyncClient() {
        BeanContainerListener beanContainerListener = new BeanContainerListener() {

            @Override
            public void created(BeanContainer container) {
                DynamodbEnhancedClientProducer producer = container.beanInstance(DynamodbEnhancedClientProducer.class);
                producer.setDynamoDbAsyncClient(container.beanInstance(DynamoDbAsyncClient.class),
                        createExtensionList());
            }
        };

        return beanContainerListener;
    }

    private List<DynamoDbEnhancedClientExtension> createExtensionList() {
        if (this.buildTimeConfig.clientExtensions.isPresent() && !this.buildTimeConfig.clientExtensions.get().isEmpty()) {
            return this.buildTimeConfig.clientExtensions.get().stream().map(configValue -> {
                DynamoDbEnhancedClientExtension extension = ChainExtension.create();
                switch (configValue) {
                    case AtomicCounterExtension:
                        extension = AtomicCounterExtension.builder().build();
                        break;
                    case VersionedRecordExtension:
                        extension = VersionedRecordExtension.builder().build();
                        break;
                    case AutoGeneratedTimestampRecordExtension:
                        extension = AutoGeneratedTimestampRecordExtension.create();
                        break;
                }
                return extension;
            }).collect(Collectors.toList());
        }
        return List.of(VersionedRecordExtension.builder().build());
    }
}
